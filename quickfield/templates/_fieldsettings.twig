{% requireAdmin %}

{% import "_includes/forms" as forms %}

{% set groups = craft.fields.getAllGroups('id') %}
{% if not groups %}{% exit 404 %}{% endif %}

{% set fieldTypes = craft.fields.getAllFieldTypes() %}
{% set fieldType = craft.fields.getFieldType('PlainText') %}

{% set groupOptions = [] %}
{% for group in groups %}
	{% set groupOptions = groupOptions|merge([{ label: group.name, value: group.id }]) %}
{% endfor %}
{{ forms.selectField({
	first: true,
	label: "Group"|t,
	instructions: "Which group should this field be displayed in?"|t,
	id: 'group'|namespaceInputId,
	name: 'group',
	options: groupOptions
}) }}

{{ forms.textField({
	label: "Name"|t,
	instructions: "What this field will be called in the CP."|t,
	id: 'name'|namespaceInputId,
	name: 'name',
	required: true,
	translatable: true,
	autofocus: true
}) }}

{{ forms.textField({
	label: "Handle"|t,
	instructions: "How youâ€™ll refer to this field in the templates."|t,
	id: 'handle'|namespaceInputId,
	class: 'code',
	name: 'handle',
	maxlength: 64,
	required: true,
}) }}

{{ forms.textareaField({
	label: "Instructions"|t,
	instructions: "Helper text to guide the author."|t,
	id: 'instructions'|namespaceInputId,
	class: 'nicetext',
	name: 'instructions',
	translatable: true
}) }}

{% if craft.isLocalized() %}
	{{ forms.checkboxField({
		label: "This field is translatable"|t,
		name: 'translatable'
	}) }}
{% endif %}

<hr>

{{ forms.selectField({
	label: "Field Type"|t,
	instructions: "What type of field is this?"|t,
	warning: (fieldId is defined ? "Changing this may result in data loss."|t),
	id: 'type'|namespaceInputId,
	name: 'type',
	options: fieldTypes,
	value: fieldType.getClassHandle(),
	toggle: true
}) }}

{% for _fieldType in fieldTypes %}
	{% set isCurrent = (_fieldType.getClassHandle() == fieldType.getClassHandle()) %}
	<div id="{{ _fieldType.getClassHandle()|namespaceInputId }}"{% if not isCurrent %} class="hidden"{% endif %}>
		{% namespace 'types['~_fieldType.getClassHandle()~']' %}
		{% if isCurrent %}
			{{ fieldType.getSettingsHtml()|raw }}
		{% else %}
			{{ _fieldType.getSettingsHtml()|raw }}
		{% endif %}
		{% endnamespace %}
	</div>
{% endfor %}



{% includejs "new Craft.HandleGenerator('#" ~ ('name'|namespaceInputId) ~ "', '#" ~ ('handle'|namespaceInputId) ~ "');" %}
